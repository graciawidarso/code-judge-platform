version: '3.8'

services:
  web:
    build: .
    ports:
      - "1234:8000"
    env_file:
      - .env.prod
    volumes:
      - .:/code
      - shared-data:/files/shared/data
    depends_on:
      - mongo
      - redis
    networks:
      - my-network

  mongo:
    image: mongo
    env_file:
      - .env.prod
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DB_NAME}
    ports:
      - "27017:27017"
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - mongo-data:/data/db
    networks:
      - my-network

  redis:
    image: redis
    networks:
      - my-network

  celery_worker_1:
    build: .
    command: celery -A celery_app.celery worker --loglevel=info -n worker1
    env_file:
      - .env.prod
    volumes:
      - .:/code
      - shared-data:/files/shared/data
    depends_on:
      - web
      - redis
    networks:
      - my-network

  celery_worker_2:
    build: .
    command: celery -A celery_app.celery worker --loglevel=info -n worker2
    env_file:
      - .env.prod
    volumes:
      - .:/code
      - shared-data:/files/shared/data
    depends_on:
      - web
      - redis
    networks:
      - my-network

  celery_flower:
    build: .
    command: celery -A celery_app.celery flower
    ports:
      - "5555:5555"
    env_file:
      - .env.prod
    volumes:
      - .:/code
    depends_on:
      - redis
    networks:
      - my-network

networks:
  my-network:

volumes:
  mongo-data:
  shared-data:
