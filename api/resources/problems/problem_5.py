data = {
    "id": "flun1",
    "title": "",
    "description": "",
    "timeLimit": 5,
    "input": ["nums"],
    "testCase": {
        "1": {"nums": [9,5,8,5,4,5,3,3,10,0,9,5,8,10,5,8,5,4,8,1,9,0,2,3,0,5,4,8,6,0,9,9,7,7,4,3,8],"output": 6},
        "2": {"nums": [1,8,2,2,3,10,10,3,5], "output": 8},
        "3": {"nums": [2,6,0,9,3,5,5,2,3,4,4,10,10,8,9,9,10,10,1,9,2,3,10,2,0,4,4,7,2], "output": 8},
        "4": {"nums": [2,4,2,10,9,6,5,4,7,9,5,6,7,6,7,4,6,0], "output": 10},
        "5": {"nums": [7,9,9,2,0,7,6,0,3,2,3,5,0,9,4,1,7,9], "output": 6},
        "6": {"nums": [7,6,2,10,10,6,3,3,7,5,10,5,10,0,5,10,9,2,5,9,7,5,4,1,0,6,10,9,1,1,9], "output": 4},
        "7": {"nums": [2,2,5,5,7,8,6,9,10], "output": 10},
        "8": {"nums": [3,7,0,6,2,8,3,1,1,8,3,5,10,5,5,0,6,7,0,8,4,3,1,2,9,1,2], "output": 10},
        "9": {"nums": [5,2,0,9,0,1,0,3,9,5,4,2,8,5,10,4,8,2,1,2,3,9,10,1,10,0,6,4,5,8,3,8], "output": 6},
        "10": {"nums": [7,3,0,0,9,8,9,6,7,3,8,9,8,0,8,3,4,9,9,9,2,8,10,10,0,7,9,5,10,0,8,7,0,2,7,10,2,7,6,4], "output": 5},
        "11": {"nums": [1,3,9,9,5,2,7,5,4,7,9,10,7,3,2,0,4,8,1,10,5,8,4], "output": 0},
        "12": {"nums": [9,4,5,10,2,9,6,4,4,9,4,9,0,5,4,2,7,8,4,10,2,5,2,6,2,1,5,3,0,0,7,10,3,8,5,7,2,3,4,8], "output": 1},
        "13": {"nums": [4,5,10,4,7,5,8,8,4,9,10,7,4,4,8,7,6,10,3,7,0,7,3,1,3,10,7,2,7,5,6,5,7,1,5,5,4,0,5,5,0,6,10,7,8], "output": 9},
        "14": {"nums": [2,1,9,8,5,2,0,5,9,7,6,3,7,1,6,9,3,7,2,10,4,10,10,2,10,8,5,3,5,2,10,4,9,8,1,7,3], "output": 0},
        "15": {"nums": [5,9,6,8,6,0,9,4,10,3,5,2,9], "output": 10},
        "16": {"nums": [6,0,1,1,8,8,9,0,5,7,4,10,7,5,5,2,0,4,3,7,9,6,2,6,4,4,0,5,6,4,7,5,2,9,7,0,7,7], "output": 10},
        "17": {"nums": [2,5,6,1,9,9,9,5,5,7,7,3], "output": 6},
        "18": {"nums": [0,3,6,10,4,10,10,5,7,6,10,2,3,6,8,2,3,2,9,0,4,3,5,2,4,5,0,10,3,1,7,3,10,0,3], "output": 9},
        "19": {"nums": [0,1,9,0,8,6,10,2,3,9,5,4,5,4,7,10,0,6,5,7,3,1,5,8,6,5,4,0,5,10,7,3,6,5,5,7,0], "output": 2},
        "20": {"nums": [2,5,4,5,4,1,6,0,10,4,6,0,9,3,8,9,2,0,6,4,0,10,8,1,0,0,2,3,6,1,7], "output": 7},
        "21": {"nums": [1,9,3,5,6,2,1,0,9,10,1,2,5,0,1,7,9,2,3,2,6,1,6,3,2,10,6,7,5,1,2,2,10,3,6,7,0,10,10], "output": -1},
        "22": {"nums": [4,0,7,2], "output": 7},
        "23": {"nums": [3,3,2,9,7,10,10,10,0,8,3,8,7,6,7,5,9,4,7,8,3,9,7,1,6,2,4,9,10,3,1,6,8,8,0,1,10,1,4,7,7,3,3,7,8,0,1,10,8], "output": 5},
        "24": {"nums": [9,7,3,8,7,1,0,0,10,10,7,4,6,4,4,10,6,6,3,2,0,2,7,1,9,0,1,10,7,4,0,8,5,0,3,0,8,1,6,3,8,2,5,3,8,0,7,5], "output": -1},
        "25": {"nums": [6,4,8,7,6,4,5,1,6,2,1,4,4,5,9,6,3,2,2,7,5], "output": 9},
        "26": {"nums": [2,4,4,5,10,0,1,2,5,0,1,10,6,4,0,0,8,9,5], "output": 9},
        "27": {"nums": [8,3,0,7,6,9,1,7,7,2,4,4,8,9,1,8,6,1,6,3,3,10,0,1,6,4,8,1,9,8,7,4,5,3,10,9,2,7,1,4,4,6,7], "output": 5},
        "28": {"nums": [3,9], "output": 9},
        "29": {"nums": [3,10,9,10,9,1,6,8,2,7,9,0,3,4,7,2,2,5,9,7,8,6,8,4,4,6,7,4,5,4,0,9], "output": 1},
        "30": {"nums": [5,4,10,10,0,8,0,3,6,7,5,0,0,1,0,5,9,0,0,0,7,5,3,5,0,5,6,4,1], "output": 9},
        "31": {"nums": [6,9,9,0,1,10,1,10,9,1,2,10,2], "output": 6},
        "32": {"nums": [5,5,8,9,8,6,6,5,2,9,10,9,2,5,2,6,2,3,5,3,7,10,1,8,1,5,7], "output": -1},
        "33": {"nums": [1,5,5,3,10,1,1,3,4,5,6,9,5,2,6,2,7,1,1,4,10,10,3,3], "output": 9},
        "34": {"nums": [3,5,10,3,2,6,0,0,6,5,1,4,10,8,0,0,8,4,9,4,2,4,1,0,9,0,10,4,3,10,1,2,2,1,9,7,7], "output": -1},
        "35": {"nums": [8,8,10,2,7,7,9,8,2,1,8,6,1,2], "output": 10},
        "36": {"nums": [0,2,2,7,1,8,10,8,5,9,3,9,8,9,0,10,2,7,7,4,10,6,1,4,8], "output": 6},
        "37": {"nums": [5,7,9,3,9,10,1,5,2,0,1,2,8], "output": 10},
        "38": {"nums": [9,5,7,4,3,5,8,8,1,2,9,0,3,8,6,6,2,8,4,6,2,5,9,5,1,7,1,7,8,10,3,7,0,5], "output": 10},
        "39": {"nums": [10,2,0,3,4,5,9,7,5,2,3,8,2,1,7], "output": 10},
        "40": {"nums": [0,9,3,8,2,7,1,8,10,2,0,8,6,5,3,0,9,0,10,9,4,2,4,3,5,3,1,9,5,5,3,7,0,9,3,6,9,5,0,9,4,7], "output": -1},
        "41": {"nums": [0,0,9,6,5,2,8,3,0,7,5], "output": 9},
        "42": {"nums": [0,5,0,3,1,7], "output": 7},
        "43": {"nums": [4,4,0,10,3,5,5,3,0], "output": 10},
        "44": {"nums": [3,10,6,4,4,10,3,3,9,0,6,8,8,10,3,2,5,9,7,3,6,2,9,5], "output": 7},
        "45": {"nums": [3,5,3,1,4,8,4,4,9,5,8,7,1,10,8,5,10,9,1,1,9,8,5,10,3,6,0,9,5,3,4,10], "output": 7},
        "46": {"nums": [1,9,1,10,1,5,8,7,2,6,5,8], "output": 10},
        "47": {"nums": [7,3,6,0,1,6,6,6,3,1,5,5,5], "output": 7},
        "48": {"nums": [9,1,8,7,6,0,1,9,6,7,8,3,9,4,3,10,9,8,5,4,6,8,1], "output": 10},
        "49": {"nums": [3,3,3,1,0], "output": 1},
        "50": {"nums": [8,6,10,6,6,10,6,2,4,8,4,3,5,9,2,3,9,2,2,5,6,3,5,9,0,0], "output": -1}
    }
}


def test_problem(user_function):
    try:
        test_case = data.get("testCase")
        total_case = len(test_case)
        correct_case = []
        false_case = []
        false_data = None

        for id, case in test_case.items():
            nums = case.get("nums")
            expected_ouput = case.get("output")

            test_nums = nums.copy()
            user_result = user_function(test_nums)

            if expected_ouput == user_result:
                correct_case.append(id)
            else:
                false_case.append(id)
                if false_data is None:
                    false_data = f"<br>Given input:<br>&nbsp;&nbsp;&nbsp;&nbsp;nums: {nums}<br>Expected Output: {expected_ouput}<br>Your Result: {user_result}"

        result = {
            "caseCorrect": f"{len(correct_case)}/{total_case}",
            "feedback": false_data
        }

        return result, None
    except Exception as e:
        return None, f"test_problem failed: {e}"
